using System.Collections;
using System;
using System.Collections.Generic;
using UnityEngine;
using tablerealms.comms.message;
#if UNITY_WEBGL && !UNITY_EDITOR
using System.Runtime.InteropServices;
using UnityEngine.SceneManagement;
#endif

public class TableRealmsPeerToPeerNetworkWebSocket : TableRealmsPeerToPeerNetwork {
#if UNITY_WEBGL && !UNITY_EDITOR

    [DllImport("__Internal")]
    private static extern string TableRealmsGetProtocol();

    [DllImport("__Internal")]
    private static extern string TableRealmsAmIHost(string gameObjectName);
#endif

    private string sessionId;
    private bool calledHost=false;

    override public void Start() {
        if (instance == null) {
            GameObject.DontDestroyOnLoad(gameObject);
#if UNITY_WEBGL && !UNITY_EDITOR

            // Are we running in Peer2Peer mode? If not then remove flag us as the host
            if (!"EmbeddedP2P".Equals(TableRealmsGetProtocol())) {
                TableRealmsGameNetwork.p2p=false;
                TableRealmsGameNetwork.host=true;
                Destroy(this);
                Debug.Log("TableRealms: P2P Not Enabled. Protocol '"+ TableRealmsGetProtocol() + "'");
            } else {
                TableRealmsGameNetwork.p2p=true;
                TableRealmsGameNetwork.host=false; // Default host to false
                Debug.Log("TableRealms: P2P Enabled.");
            }
#else
            TableRealmsGameNetwork.p2p = false;
            TableRealmsGameNetwork.host = true;
#endif
        }
        base.Start();
    }

    public void Update() {
        if (!calledHost) {
            calledHost = true;
#if UNITY_WEBGL && !UNITY_EDITOR
            TableRealmsAmIHost(gameObject.name);
#endif
        }
    }

    override public string GetSessionId() {
        return sessionId;
    }

    public void YouAreTheHost() {
        iAmTheHost = true;
        TableRealmsGameNetwork.host = true;
    }

    public void SetHostSessionId(string sessionId) {
        this.sessionId = sessionId;
    }

    public override void DeliverMessage(P2PMessage message) {
        if (TableRealmsGameNetwork.host && TableRealmsGameNetwork.p2p) {
            InitTables();

            TableRealmsGameNetwork.instance.SendAllClientsP2PMessage(GetMessageName(message) + "|" + JsonUtility.ToJson(message, false) + "\n");
        }
    }
}
